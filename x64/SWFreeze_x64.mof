#pragma autorecover
#pragma classflags("forceupdate")
#pragma namespace("\\\\.\\root\\WMI")
//
// WPP Generated File
// PDB:  E:\JenkinsSlave\workspace\MIS_CPP\MIS_Component\SeewoFreeze_Prerelease\SWFreeze\..\SeewoFreeze\Release\x64\SWFreeze_x64.pdb
// PDB:  Last Updated :2023-6-25:7:41:6:828 (UTC) [tracepdb]
//

//ModuleName = SWFreeze_x64SWFreezeGuid	 (Init called in Function WppLog::Init)
[Dynamic,
 Description("SWFreeze_x64_SWFreezeGuid"),
 guid("{40f8c3a6-b581-4681-8e1b-ddf8505a12ea}"),
 locale("MS\\0x409")]
class SWFreeze_x64SWFreezeGuid : EventTrace
{
    [Description ("Enable Flags") : amended,
        ValueDescriptions{
             "INIT Flag",
             "PNP Flag",
             "POWER Flag",
             "WMI Flag",
             "CREATE_CLOSE Flag",
             "IOCTLS Flag",
             "WRITE_READ Flag",
             "UNLOAD Flag",
             "REDIRECT Flag",
             "MEMPOOL Flag",
             "DEFAULT Flag",
             "QUEUEING Flag",
             "HW_ACCESS Flag",
             "IOCTL Flag",
             "MDLCHAIN Flag"},
        DefineValues{
             "INIT",
             "PNP",
             "POWER",
             "WMI",
             "CREATE_CLOSE",
             "IOCTLS",
             "WRITE_READ",
             "UNLOAD",
             "REDIRECT",
             "MEMPOOL",
             "DEFAULT",
             "QUEUEING",
             "HW_ACCESS",
             "IOCTL",
             "MDLCHAIN"},
        Values{
             "INIT",
             "PNP",
             "POWER",
             "WMI",
             "CREATE_CLOSE",
             "IOCTLS",
             "WRITE_READ",
             "UNLOAD",
             "REDIRECT",
             "MEMPOOL",
             "DEFAULT",
             "QUEUEING",
             "HW_ACCESS",
             "IOCTL",
             "MDLCHAIN"},
        ValueMap{
             "0x00000001",
             "0x00000002",
             "0x00000004",
             "0x00000008",
             "0x00000010",
             "0x00000020",
             "0x00000040",
             "0x00000080",
             "0x00000100",
             "0x00000200",
             "0x00000400",
             "0x00000800",
             "0x00001000",
             "0x00002000",
             "0x00004000"}: amended
    ]
    uint32 Flags;
};
